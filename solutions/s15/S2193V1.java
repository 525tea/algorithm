package s15;

import java.io.*;

public class S2193V1 {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(br.readLine());

        long[] d = new long[91];
        d[1] = 1;
        d[2] = 1;

        for (int i = 3; i <= N; i++) {
            d[i] = d[i - 1] + d[i - 2];
        }

        System.out.println(d[N]);
    }
}

/**
 * 맨앞자리는 무조건 1, 두번째 자리는 무조건 0
 *
 * 1. dp 테이블 정의
 * d[i] = i자리 이친수의 개수
 *
 * 2. 점화식
 * d[1] = 1 / 1
 * d[2] = 1 / 10
 * d[3] = 2 / -> 1자리 10.0 | 10.1 / 0, 1
 * d[4] = 3 / -> 2자리 10.00 | 10.01 10.10 / 00, 01, 10
 * d[5] = 5 / -> 3자리 10.000 | 10.001 10.010 10.100 | 10.101 / 000, 001, 010, 100, 101
 * d[6] = 8 / -> 4자리 10.0000 | 10.0001 10.0010 10.0100 10.1000 | 10.1001 10.1010 10.0101 / 0000, 0001, 0010, 0100, 1000, 1001, 1010
 * d[7] = 13 / -> 5자리 10.00000 | 10.00001 10.00010 10.00100 10.01000 10.10000 | 10.10001 10.10010 10.10100 10.01010 10.01001 10.00101 | 10.10101 / 0000, 0001, 0010, 0100, 1000, 1001, 1010
 *
 * d[i] = d[i-1] + d[i-2]
 *
 * 3. 초기값
 * 모두 디폴트로 +1(10+0만)
 * d[1] = 1
 * d[2] = 1
 */